//
//  JSONKit+obf.m
//  JSONKit
//
//  Created by 孙继刚 on 2019/3/12.
//
#import "JSONKit+obf.h"

// JSONKit.m
// obf<./JSONKit/JSONKit+obf.h>: ConvertSingleCodePointInUTF8
// obf<./JSONKit/JSONKit+obf.h>: ConvertUTF32toUTF8
// obf<./JSONKit/JSONKit+obf.h>: JKArray
// obf<./JSONKit/JSONKit+obf.h>: JKDictionary
// obf<./JSONKit/JSONKit+obf.h>: JKDictionaryEnumerator
// obf<./JSONKit/JSONKit+obf.h>: JKSerializer
// obf<./JSONKit/JSONKit+obf.h>: JSONData
// obf<./JSONKit/JSONKit+obf.h>: JSONDataWithOptions
// obf<./JSONKit/JSONKit+obf.h>: JSONDecoder
// obf<./JSONKit/JSONKit+obf.h>: JSONKitDeserializing
// obf<./JSONKit/JSONKit+obf.h>: JSONKitSerializing
// obf<./JSONKit/JSONKit+obf.h>: JSONKitSerializingBlockAdditions
// obf<./JSONKit/JSONKit+obf.h>: JSONString
// obf<./JSONKit/JSONKit+obf.h>: JSONStringWithOptions
// obf<./JSONKit/JSONKit+obf.h>: _JKArrayCreate
// obf<./JSONKit/JSONKit+obf.h>: _JKArrayInsertObjectAtIndex
// obf<./JSONKit/JSONKit+obf.h>: _JKArrayRemoveObjectAtIndex
// obf<./JSONKit/JSONKit+obf.h>: _JKArrayReplaceObjectAtIndexWithObject
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryAddObject
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryCapacity
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryCapacityForCount
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryCreate
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryHashEntry
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryHashTableEntryForKey
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryRemoveObjectWithEntry
// obf<./JSONKit/JSONKit+obf.h>: _JKDictionaryResizeIfNeccessary
// obf<./JSONKit/JSONKit+obf.h>: _JKParseUTF8String
// obf<./JSONKit/JSONKit+obf.h>: _JSONDecoderCleanup
// obf<./JSONKit/JSONKit+obf.h>: _NSStringObjectFromJSONString
// obf<./JSONKit/JSONKit+obf.h>: allObjects
// obf<./JSONKit/JSONKit+obf.h>: andKeys
// obf<./JSONKit/JSONKit+obf.h>: atIndex
// obf<./JSONKit/JSONKit+obf.h>: block
// obf<./JSONKit/JSONKit+obf.h>: capacity
// obf<./JSONKit/JSONKit+obf.h>: clearCache
// obf<./JSONKit/JSONKit+obf.h>: collection
// obf<./JSONKit/JSONKit+obf.h>: copyWithZone
// obf<./JSONKit/JSONKit+obf.h>: countByEnumeratingWithState
// obf<./JSONKit/JSONKit+obf.h>: decoder
// obf<./JSONKit/JSONKit+obf.h>: decoderWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: delegate
// obf<./JSONKit/JSONKit+obf.h>: encodeOption
// obf<./JSONKit/JSONKit+obf.h>: encodeState
// obf<./JSONKit/JSONKit+obf.h>: entry
// obf<./JSONKit/JSONKit+obf.h>: error
// obf<./JSONKit/JSONKit+obf.h>: forKey
// obf<./JSONKit/JSONKit+obf.h>: getObjects
// obf<./JSONKit/JSONKit+obf.h>: includeQuotes
// obf<./JSONKit/JSONKit+obf.h>: initWithJKDictionary
// obf<./JSONKit/JSONKit+obf.h>: initWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: insertObject
// obf<./JSONKit/JSONKit+obf.h>: isLegalUTF8
// obf<./JSONKit/JSONKit+obf.h>: isValidCodePoint
// obf<./JSONKit/JSONKit+obf.h>: jk_cache_age
// obf<./JSONKit/JSONKit+obf.h>: jk_cachedObjects
// obf<./JSONKit/JSONKit+obf.h>: jk_calculateHash
// obf<./JSONKit/JSONKit+obf.h>: jk_collectionClassLoadTimeInitialization
// obf<./JSONKit/JSONKit+obf.h>: jk_create_dictionary
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_add_atom_to_buffer
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_error
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_object_hash
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_printf
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_updateCache
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_write
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_write1fast
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_write1slow
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_writePrettyPrintWhiteSpace
// obf<./JSONKit/JSONKit+obf.h>: jk_encode_writen
// obf<./JSONKit/JSONKit+obf.h>: jk_error
// obf<./JSONKit/JSONKit+obf.h>: jk_error_parse_accept_or3
// obf<./JSONKit/JSONKit+obf.h>: jk_managedBuffer_release
// obf<./JSONKit/JSONKit+obf.h>: jk_managedBuffer_resize
// obf<./JSONKit/JSONKit+obf.h>: jk_managedBuffer_setToStackBuffer
// obf<./JSONKit/JSONKit+obf.h>: jk_max
// obf<./JSONKit/JSONKit+obf.h>: jk_min
// obf<./JSONKit/JSONKit+obf.h>: jk_objectStack_release
// obf<./JSONKit/JSONKit+obf.h>: jk_objectStack_resize
// obf<./JSONKit/JSONKit+obf.h>: jk_objectStack_setToStackBuffer
// obf<./JSONKit/JSONKit+obf.h>: jk_object_for_token
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_array
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_dictionary
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_is_newline
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_next_token
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_number
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_skip_newline
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_skip_whitespace
// obf<./JSONKit/JSONKit+obf.h>: jk_parse_string
// obf<./JSONKit/JSONKit+obf.h>: jk_set_parsed_token
// obf<./JSONKit/JSONKit+obf.h>: jk_string_add_unicodeCodePoint
// obf<./JSONKit/JSONKit+obf.h>: json_parse_it
// obf<./JSONKit/JSONKit+obf.h>: keyEnumerator
// obf<./JSONKit/JSONKit+obf.h>: mutableCopyWithZone
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectFromJSONData
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectFromJSONDataWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectFromJSONString
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectFromJSONStringWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectWithData
// obf<./JSONKit/JSONKit+obf.h>: mutableObjectWithUTF8String
// obf<./JSONKit/JSONKit+obf.h>: mutations
// obf<./JSONKit/JSONKit+obf.h>: nextObject
// obf<./JSONKit/JSONKit+obf.h>: objectAtIndex
// obf<./JSONKit/JSONKit+obf.h>: objectForKey
// obf<./JSONKit/JSONKit+obf.h>: objectFromJSONData
// obf<./JSONKit/JSONKit+obf.h>: objectFromJSONDataWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: objectFromJSONString
// obf<./JSONKit/JSONKit+obf.h>: objectFromJSONStringWithParseOptions
// obf<./JSONKit/JSONKit+obf.h>: objectWithData
// obf<./JSONKit/JSONKit+obf.h>: objectWithUTF8String
// obf<./JSONKit/JSONKit+obf.h>: objects
// obf<./JSONKit/JSONKit+obf.h>: options
// obf<./JSONKit/JSONKit+obf.h>: parseJSONData
// obf<./JSONKit/JSONKit+obf.h>: parseState
// obf<./JSONKit/JSONKit+obf.h>: parseUTF8String
// obf<./JSONKit/JSONKit+obf.h>: range
// obf<./JSONKit/JSONKit+obf.h>: releaseState
// obf<./JSONKit/JSONKit+obf.h>: removeObjectAtIndex
// obf<./JSONKit/JSONKit+obf.h>: removeObjectForKey
// obf<./JSONKit/JSONKit+obf.h>: replaceObjectAtIndex
// obf<./JSONKit/JSONKit+obf.h>: serializeObject
// obf<./JSONKit/JSONKit+obf.h>: serializeUnsupportedClassesUsingBlock
// obf<./JSONKit/JSONKit+obf.h>: serializeUnsupportedClassesUsingDelegate
// obf<./JSONKit/JSONKit+obf.h>: setObject
// obf<./JSONKit/JSONKit+obf.h>: withObject
